
name: Build Windows Release

on: 
  push:
    tags:
      - '*'

  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python 3.11 Environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nuitka requests wxPython qrcode[pil]==7.4.2

    - name: Get Version Tag
      id: get_version
      run: |
        $tag = $(curl -s "https://api.github.com/repos/${{ github.repository }}/tags" | jq -r '.[0].name')
        $version = ($tag -replace '^v|\.', '').ToCharArray() -join '.'
        Write-Output "tag=$tag" >> $env:GITHUB_OUTPUT
        Write-Output "version=$version" >> $env:GITHUB_OUTPUT

    - name: Build with Nuitka
      run: |
        nuitka --standalone --nofollow-import-to=numpy,PIL --windows-console-mode=disable --windows-file-version=${{ steps.get_version.outputs.version }} --product-name="Bili23 Downloader" --company-name="Scott Sloan" --file-description="Bili23 Downloader" --copyright="Copyright (C) 2022-2025 Scott Sloan" --show-progress --mingw64 --assume-yes-for-downloads --output-dir=out src/GUI.py
    
    - name: Add License
      run: |
        Rename-Item "out/GUI.dist" "out/Bili23 Downloader"
        Copy-Item ./LICENSE "out/Bili23 Downloader/"

    - name: Upload Artifacts (no_ffmpeg)
      uses: actions/upload-artifact@v4
      with:
        name: Bili23_Downloader_${{ steps.get_version.outputs.tag }}_win_x64_release.zip
        path: |
          out/Bili23 Downloader
      
    - name: Download FFmpeg
      run: |
        Invoke-WebRequest -Uri "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip" -OutFile "ffmpeg.zip"
        Expand-Archive -Path "ffmpeg.zip" -DestinationPath "FFmpeg"
        $appExePath = Get-ChildItem -Path $extractedFolder -Recurse | Where-Object { $_.Name -match '^ffmpeg\.exe$' }
        Copy-Item $appExePath.FullName "out/Bili23 Downloader/"
    
    - name: Upload Artifacts (with_ffmpeg)
      uses: actions/upload-artifact@v4
      with:
        name: Bili23_Downloader_${{ steps.get_version.outputs.tag }}_win_x64_with_ffmpeg_release.zip
        path: |
          out/Bili23 Downloader

    - name: Compression (with_ffmpeg)
      shell: pwsh
      run: |
        Compress-Archive -Path "out/Bili23 Downloader" -DestinationPath "Bili23_Downloader_${{ steps.get_version.outputs.tag }}_win_x64_with_ffmpeg_release.zip"

    - name: Compression (no_ffmpeg)
      shell: pwsh
      run: |
        Remove-Item -Path "out/Bili23 Downloader/ffmpeg.exe"

        Compress-Archive -Path "out/Bili23 Downloader" -DestinationPath "Bili23_Downloader_${{ steps.get_version.outputs.tag }}_win_x64_release.zip"
    
    - name: Print SHA1
      run: |
        echo Get-FileHash -Path "C:\path\to\your\file.txt" -Algorithm SHA1
        echo Get-FileHash -Path "C:\path\to\your\file.txt" -Algorithm SHA1

    - name: Upload to Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          Bili23_Downloader_${{ steps.get_version.outputs.tag }}_win_x64_release.zip
          Bili23_Downloader_${{ steps.get_version.outputs.tag }}_win_x64_with_ffmpeg_release.zip
        token: ${{ secrets.RELEASE }}
        name: ${{ steps.get_version.outputs.tag }}
        append_body: |
          The executable file for version ${{ steps.get_version.outputs.tag }}
        make_latest: true
        tag_name: ${{ steps.get_version.outputs.tag }}
        draft: true
        prerelease: false
        generate_release_notes: false